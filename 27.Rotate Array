Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.
Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]

Example 2:
Input: nums = [-1,-100,3,99], k = 2
Output: [3,99,-1,-100]
Explanation:
rotate 1 steps to the right: [99,-1,-100,3]
rotate 2 steps to the right: [3,99,-1,-100]
===================================================================================
import java.util.*;

class Solution {
    public void rotate(int[] nums, int k) {
      int n = nums.length;
      
      if(k==nums.length || nums.length==1 || nums==null){
          return;
      }
      
      if(k>nums.length){
          k = k%n;
      }
      
      int i=0,j=n-1;
      while(i<j){
          int temp = nums[i];
          nums[i] = nums[j];
          nums[j] = temp;
          i++;
          j--;
      }
      
      int left = 0;
      int right = k-1;
      while(right>left){
          int temp = nums[left];
          nums[left] = nums[right];
          nums[right] = temp;
          left++;
          right--;
      }
      
      int left1 = k;
      int right1 = n-1;
      while(right1>left1){
          int temp = nums[left1];
          nums[left1] = nums[right1];
          nums[right1] = temp;
          left1++;
          right1--;
      }
      
    
    }
}
public class Main
{   
     public static void main(String[]args)
    {
        Scanner sc=new Scanner(System.in);
        String y=sc.nextLine();
        String n =sc.nextLine();
        Solution s = new Solution();
        String s_arr[]=n.split(" ");
        int arr[]=new int[s_arr.length];
        for(int i=0;i<s_arr.length;i++)
        {
            arr[i]=Integer.parseInt(s_arr[i]);
        }
        int k= sc.nextInt();
        s.rotate(arr,k);
        for(int i=0;i<arr.length;i++)
            System.out.print(arr[i]+" ");
        System.out.println();
    }
}
