In A exam with negative marking the passing criteria is you have to score zero or positive marks .
we have given an array which denotes the score of the students in that exam .
you have to move all the failed students to last of the array .
Solve this Question in 0(N) time complexity. Using two pointers. Watch Hints if not being able to figure out.

Example 1:
Input : 
N = 8
arr[] = {1, -1, 3, 2, -7, -5, 11, 6 }
Output :  1 3 2 11 6 -1 -7 -5

Example 2:
Input :
 N=8
arr[] = {-5, 7, -3, -4, 9, 10, -1, 11}
Output : 7 9 10 11 -5 -3 -4 -1

Constraints:
1 ≤ N ≤ 10^5
-10^5 ≤ arr[] ≤ 10^5
=======================================================================================================
import java.util.*;


//========== User's Code Starts Here ==========

class Solution {
    public int[] arrange(int[] nums) {
        
        int n = nums.length;
		int a[] = new int[n];
		int index=0;
		for(int i=0; i<n; i++){
		    if(nums[i]>=0){
		        a[index]=nums[i];
		        index++;
		    }
		 
		}
		for(int i=0; i<n; i++){
		    if(nums[i]<0){
		        a[index]=nums[i];
		        index++;
		    }
		}
	    return a;
    }
}

//========== User's Code Ends Here ==========



public class Main
{
   
    
     public static void main(String[]args)
    {
        Scanner sc=new Scanner(System.in);
        int n =sc.nextInt();
        Solution s = new Solution();
        int arr[]=new int[n];
        for(int i=0;i<n;i++)
        {
            arr[i]=sc.nextInt();
        }
        int output[] = s.arrange(arr);
        
        int ele=0;
            for(int i=0;i<output.length;i++)
            {
                if(output[i]<0)
                {
                    ele=i;
                    break;
                }
            }
            int f=0;
             for(int i=ele;i<output.length;i++)
             {
                if(output[i]>=0)
                {
                    f=1;
                    break;
                }
             }
            if(f==1)
                System.out.println("false");
            else
                System.out.println("true");
    }
}
